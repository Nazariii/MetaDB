<project name="velocity_test" xmlns:ivy="antlib:org.apache.ivy.ant">
    <path id="ivy.lib.path">
        <fileset dir="C:\apache-ant-1.9.6\lib" includes="*.jar"/>
    </path>

    <taskdef resource="org/apache/ivy/ant/antlib.xml"
             uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>

    <property name="app_root" location="D:/SalesForceMeta"/>

    <property name="src" location="src"/>
    <property name="build" location="build"/>
    <property name="dist" location="dist"/>
    <property name="lib.dir" location="lib"/>
    <property name="template.dir" location="templates"/>
    <property name="properties.dir" location="properties"/>
    <property name="tomcat_dir" location="${app_root}/prereqs/tomcat/webapp/apache-tomcat-8.0.28/webapps"/>
    <property name="sql" location="src/sql"/>



    <pathconvert property="manifest.classpath" pathsep=" ">
        <!--<fileset dir="${lib.dir}" includes="**/*.jar"/>-->
        <!--&lt;!&ndash;<fileset dir="${template.dir}" includes="**/*.vm"/>&ndash;&gt;-->
        <!--<fileset dir="${properties.dir}" includes="**/*.properties"/>-->

        <path id="compile.classpath">
            <fileset dir="lib">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="properties">
                <include name="*.properties"/>
            </fileset>
        </path>

        <mapper>
            <chainedmapper>
                <flattenmapper/>
                <globmapper from="*.jar" to="lib/*.jar"/>
            </chainedmapper>
            <chainedmapper>
                <flattenmapper/>
                <globmapper from="*.properties" to="properties/"/>
            </chainedmapper>
        </mapper>
    </pathconvert>

    <target name="init">
        <tstamp/>
        <mkdir dir="${build}"/>
    </target>

    <target name="resolve">
        <ivy:configure/>
        <ivy:resolve file="ivy.xml" conf="default"/>
    </target>

    <target name="retrieve-default" depends="resolve">
        <ivy:retrieve pattern="lib/[artifact]-[type]-[revision].[ext]" conf="default"/>
    </target>

    <target name="compile" depends="init, retrieve-default">
        <javac srcdir="${src}" destdir="${build}" classpathref="compile.classpath"/>
    </target>

    <target name="packjar" depends="compile">
        <mkdir dir="${dist}"/>
        <jar jarfile="${dist}/MyProject-${DSTAMP}.jar" basedir="${build}">
            <manifest>
                <attribute name="Main-Class" value="com.company.Main"/>
                <attribute name="Class-Path" value="${manifest.classpath}"/>
            </manifest>
        </jar>
    </target>

    <target name="packwar">
        <war destfile="MyProject-${DSTAMP}.war" webxml="web.xml">
            <metainf file="context.xml" />
        </war>
    </target>

    <target name="deploy" depends="packwar, database_scripts">
        <copy todir="${app_root}/app/lib" flatten="false">
            <fileset dir="lib"/>
        </copy>

        <copy todir="${app_root}/app" flatten="false">
            <fileset dir="dist"/>
        </copy>

        <copy todir="${app_root}/app/properties" flatten="false">
            <fileset dir="properties"/>
        </copy>

        <copy todir="${app_root}/app/templates" flatten="false">
            <fileset dir="templates"/>
        </copy>

        <copy todir=".">
            <fileset dir="dist"/>
        </copy>

        <copy todir="${tomcat_dir}">
            <fileset dir="dist"/>
        </copy>

    </target>

    <target name="database_scripts">
        <sql driver="net.sourceforge.jtds.jdbc.Driver"
             url="jdbc:jtds:sqlserver://localhost:1433;databaseName=fresh"
             userid="nmeln"
             password="Powerday9!"
             print="TRUE"
             classpathref="compile.classpath"
             onerror="continue"
        delimiter=";">
            <path>
            <fileset dir="${sql}">
                <include name="field.sql"/>
                <include name="entity.sql"/>
            </fileset>
            </path>
        </sql>
    </target>

    <target name="clean"
            description="clean up">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>

    <target name="clean-cache" depends="clean" description="Purge ivy cache">
        <ivy:cleancache/>
    </target>
</project>